LINK:
    - {link: "https://z555.icu/link/", theme: "butterfly"}  # 友链页地址1，修改为你的友链页地址

SETTINGS_FRIENDS_LINKS: {
    enable: false,
    json_api: "",
    list: [
        # 示例1：
        ["贰猹の小窝", "https://noionion.top/", "https://pub-noionion.oss-cn-hangzhou.aliyuncs.com/head.jpg"],
        ["Akilarの糖果屋", "https://akilar.top/", "https://akilar.top/images/headimage.png"],
        # 示例2：使用suffix的配置如下
        # 程序目前自动获取 "atom.xml", "feed/atom", "rss.xml", "rss2.xml", "feed", "index.xml" 这些后缀
        # 如果目标地址的后缀不在其中，就可以在这里添加
        # 比如 https://elizen.me/hello.xml ，填写：
        ["elizen", "https://elizen.me/", "https://akilar.top/images/headimage.png", "hello.xml"]
    ]
}

GITEE_FRIENDS_LINKS: {
    enable: false, # true 开启gitee issue兼容
    type: "normal",  # volantis/stellar用户请在这里填写volantis
    owner:  "ccknbc",  # 填写你的gitee用户名
    repo:  "blogroll",  # 填写你的gitee仓库名
    state:  "open",  # 填写抓取的issue状态(open/closed)
}

GITHUB_FRIENDS_LINKS: {
    enable: false, # true 开启github issue兼容
    type: "normal",  # volantis/stellar用户请在这里填写volantis
    owner: "ccknbc",  # 填写你的github用户名
    repo: "ccknbc-actions",  # 填写你的github仓库名
    state: "open",  # 填写抓取的issue状态(open/closed)
}

BLOCK_SITE: [
#    https://example.com/, # 屏蔽 https://example.com/
#    .*\.com,  # 含有.com的全部屏蔽
#    ^http://,  # http开头的全部屏蔽
]

HTTP_PROXY: false

OUTDATE_CLEAN: 60

DATABASE: "sqlite"

DEPLOY_TYPE: "github"
